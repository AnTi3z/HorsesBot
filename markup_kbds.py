import logging
from operator import itemgetter

from telebot import types

import db_wrap
from utils import *
from config import RULES
from ratings import *

logger = logging.getLogger('AnimalRaces')


markups = list()

# step 0
markups.append(types.ReplyKeyboardMarkup(resize_keyboard=True))
markups[0].row(types.KeyboardButton('üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'), types.KeyboardButton('üìú–°—Ç–∞—Ç—É—Å'), types.KeyboardButton('üí∞–°—Ç–∞–≤–∫–∞'))
markups[0].row(types.KeyboardButton('üîñ–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å'), types.KeyboardButton('‚ÑπÔ∏è–ü—Ä–∞–≤–∏–ª–∞'))

# step 1 - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
markups.append(types.ReplyKeyboardMarkup(resize_keyboard=True))
markups[1].row(types.KeyboardButton('üë§–õ–∏—á–Ω–∞—è'), types.KeyboardButton('üë•–ò–≥—Ä–æ–∫–∏'), types.KeyboardButton('üêé–ñ–∏–≤–æ—Ç–Ω—ã–µ'))
markups[1].row( types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥'), types.KeyboardButton('‚¨ÜÔ∏è–ù–∞–≤–µ—Ä—Ö'))

# step 2 - –°—Ç–∞–≤–∫–∞
markups.append(types.ReplyKeyboardMarkup(resize_keyboard=True))
markups[2].row(types.KeyboardButton('‚ûï'), types.KeyboardButton('‚ûï‚ûï'), types.KeyboardButton('–ú–∞–∫—Å.'))
markups[2].row(types.KeyboardButton('‚ûñ'), types.KeyboardButton('‚ûñ‚ûñ'), types.KeyboardButton('–ú–∏–Ω.'))
markups[2].row(types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥'), types.KeyboardButton('‚¨ÜÔ∏è–ù–∞–≤–µ—Ä—Ö'))

# step 3 - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –õ–∏—á–Ω–∞—è
markups.append(types.ReplyKeyboardMarkup(resize_keyboard=True))
markups[3].row(types.KeyboardButton(''), types.KeyboardButton(''), types.KeyboardButton(''))
markups[3].row(types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥'), types.KeyboardButton('‚¨ÜÔ∏è–ù–∞–≤–µ—Ä—Ö'))

# step 4 - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –ò–≥—Ä–æ–∫–∏
markups.append(types.ReplyKeyboardMarkup(resize_keyboard=True))
markups[4].row(types.KeyboardButton('üí∞–ó–æ–ª–æ—Ç–æ'), types.KeyboardButton('‚öúÔ∏è–£—Ä–æ–≤–µ–Ω—å'))
markups[4].row(types.KeyboardButton('üí∞–°—Ç–∞–≤–∫–∏'), types.KeyboardButton('ü•áü•àü•â–ú–µ–¥–∞–ª–∏'), types.KeyboardButton('üèÜ–ü–æ–±–µ–¥—ã'))
markups[4].row(types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥'), types.KeyboardButton('‚¨ÜÔ∏è–ù–∞–≤–µ—Ä—Ö'))

# step 5 - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –ñ–∏–≤–æ—Ç–Ω—ã–µ
markups.append(types.ReplyKeyboardMarkup(resize_keyboard=True))
markups[5].row(types.KeyboardButton(''), types.KeyboardButton(''), types.KeyboardButton(''))
markups[5].row(types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥'), types.KeyboardButton('‚¨ÜÔ∏è–ù–∞–≤–µ—Ä—Ö'))

# step 6 - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –ò–≥—Ä–æ–∫–∏ - –ü–æ–±–µ–¥—ã (inline keyboard)
markups.append(types.InlineKeyboardMarkup())
markups[6].row(types.InlineKeyboardButton('#', callback_data='call_stat_players_wins_abs'),
               types.InlineKeyboardButton('%', callback_data='call_stat_players_wins_rate'))

# step 7 - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –ò–≥—Ä–æ–∫–∏ - –ú–µ–¥–∞–ª–∏ (inline keyboard)
markups.append(types.InlineKeyboardMarkup())
markups[7].row(types.InlineKeyboardButton('#', callback_data='call_stat_players_prizes_abs'),
               types.InlineKeyboardButton('%', callback_data='call_stat_players_prizes_rate'))

# step 8 - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –ò–≥—Ä–æ–∫–∏ - –°—Ç–∞–≤–∫–∏ (inline keyboard)
markups.append(types.InlineKeyboardMarkup())
markups[8].row(types.InlineKeyboardButton('#', callback_data='call_stat_players_bets_cnt'),
               types.InlineKeyboardButton('—Å—É–º–º–∞üí∞', callback_data='call_stat_players_bets_sum'))


def get_reply_markup(user_rec):
    if user_rec.menu == 2:
        hi_step = round_int(int(user_rec.money * 0.1))
        low_step = hi_step // 10
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.row(types.KeyboardButton('‚ûï {}üí∞'.format(low_step)),
                   types.KeyboardButton('‚ûï‚ûï {}üí∞'.format(hi_step)),
                   types.KeyboardButton('–ú–∞–∫—Å.({}üí∞)'.format(user_rec.max_bet)))
        markup.row(types.KeyboardButton('‚ûñ {}üí∞'.format(low_step)),
                   types.KeyboardButton('‚ûñ‚ûñ {}üí∞'.format(hi_step)),
                   types.KeyboardButton('–ú–∏–Ω.(10üí∞)'))
        markup.row(types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥'), types.KeyboardButton('‚¨ÜÔ∏è–ù–∞–≤–µ—Ä—Ö'))
        return markup
    else:
        return markups[user_rec.menu]


def inline_btn_handler(user_id, params):
    if params[0] == 'players':
        if params[1] == 'wins':
            if params[2] == 'rate':
                sort_rate = True
            else:
                sort_rate = False
            text = players_wins(user_id, sort_rate)
            return text, markups[6]
        elif params[1] == 'prizes':
            if params[2] == 'rate':
                sort_rate = True
            else:
                sort_rate = False
            text = players_prizes(user_id, sort_rate)
            return text, markups[7]
        elif params[1] == 'bets':
            if params[2] == 'sum':
                sort_sum = True
            else:
                sort_sum = False
            text = players_bets(user_id, sort_sum)
            return text, markups[8]


def check_btn(race_user, text):
    if '–ù–∞–≤–µ—Ä—Ö' in text:
        menu_0(race_user)

    # step 0
    elif race_user.menu == 0:
        if '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' in text:
            menu_0_1(race_user)
        elif '–°—Ç–∞—Ç—É—Å' in text:
            race_user.put_msg(race_user.status_msg)
        elif '–°—Ç–∞–≤–∫–∞' in text:
            race_user.put_msg('–†–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω {}üí∞'.format(race_user.bet), menu=2)
        elif '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å' in text:
            race_user.put_msg('üöß–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µüöß')
        #    race_user.put_msg('–ü–æ–¥–µ–ª–∏–≤—à–∏—Å—å —Å—Å—ã–ª–∫–æ–π, –í—ã –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Å—á–µ—Ç —Å—É–º–º—É '
        #                      '—Ä–∞–≤–Ω—É—é —Å—Ç–∞—Ä—Ç–æ–≤–æ–π —Å—É–º–º–µ –í–∞—à–µ–≥–æ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è (—Å–µ–π—á–∞—Å —ç—Ç–æ {}üí∞).\n'
        #                      '–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∏–≥—Ä—É:'.format(race_user.low_limit))
        #    race_user.put_msg('https://t.me/AnimalsRacingBot?start={}'.format(int_to_hash(race_user.user_id)))
        elif '–ü—Ä–∞–≤–∏–ª–∞' in text:
            race_user.put_msg(RULES)
    # step 1 - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (0 - 1)
    elif race_user.menu == 1:
        if '–õ–∏—á–Ω–∞—è' in text:
            race_user.put_msg('üöß–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µüöß')
        elif '–ò–≥—Ä–æ–∫–∏' in text:
            race_user.put_msg('üë•–†–µ–π—Ç–∏–Ω–≥–∏ –∏–≥—Ä–æ–∫–æ–≤', menu=4)
        elif '–ñ–∏–≤–æ—Ç–Ω—ã–µ' in text:
            race_user.put_msg('üöß–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µüöß')
        elif '–ù–∞–∑–∞–¥' in text:
            menu_0(race_user)
    # step 2 - –°—Ç–∞–≤–∫–∞ (0 - 2)
    elif race_user.menu == 2:
        if '‚ûï' == text:
            race_user.set_bet(race_user.bet + round_int(int(race_user.money * 0.1)) // 5)
        elif '‚ûï‚ûï' == text:
            race_user.set_bet(race_user.bet + round_int(int(race_user.money * 0.1)))
        elif '‚ûñ' == text:
            race_user.set_bet(race_user.bet - round_int(int(race_user.money * 0.1)) // 5)
        elif '‚ûñ‚ûñ' == text:
            race_user.set_bet(race_user.bet - round_int(int(race_user.money * 0.1)))
        elif '–ú–∏–Ω' in text:
            race_user.set_bet(10)
        elif '–ú–∞–∫—Å' in text:
            race_user.set_bet(race_user.max_bet)
        elif '–ù–∞–∑–∞–¥' in text:
            menu_0(race_user)
        else:
            try:
                bet = int(text)
                race_user.set_bet(bet)
            except:
                logger.warning('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å—Ç–∞–≤–∫–∏ –≤–≤–µ–ª: {}'.format(race_user.firs_name, text))
    # step 4 - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –ò–≥—Ä–æ–∫–∏ (0 - 1 - 4)
    elif race_user.menu == 4:
        if '–ó–æ–ª–æ—Ç–æ' in text:
            stat = db_wrap.get_players_stat()
            sorted_stat = sorted(stat, key=itemgetter('money'), reverse=True)[:10]
            result = ['üí∞–ó–æ–ª–æ—Ç–æ\n\n']
            for row in sorted_stat:
                result.append('`{:<14.14}  {:>5}üí∞`\n'.format(strip_emoji(row['first_name']),
                                                              str_human_int(row['money'])))
            race_user.put_msg(''.join(result))
        elif '–£—Ä–æ–≤–µ–Ω—å' in text:
            stat = db_wrap.get_players_stat()
            sorted_stat = sorted(stat, key=itemgetter('level', 'money'), reverse=True)[:10]
            result = ['‚öúÔ∏è–£—Ä–æ–≤–µ–Ω—å\n\n']
            for row in sorted_stat:
                result.append('`{:<16.16}  {:>3}‚öú`\n'.format(strip_emoji(row['first_name']), row['level']))
            race_user.put_msg(''.join(result))
        elif '–ü–æ–±–µ–¥—ã' in text:
            stat = db_wrap.get_players_stat()
            sorted_stat = sorted(stat, key=itemgetter('wins'), reverse=True)[:10]
            result = ['üèÜ–ü–æ–±–µ–¥—ã\n\n']
            for row in sorted_stat:
                result.append('`{:<14.14}  {:>4}/{}`\n'.format(strip_emoji(row['first_name']),
                                                               row['wins'], row['bets_cnt']))
            race_user.put_msg(''.join(result))
        elif '–ú–µ–¥–∞–ª–∏' in text:
            stat = db_wrap.get_players_stat()
            sorted_stat = sorted(stat, key=itemgetter('prizes'), reverse=True)[:10]
            result = ['ü•áü•àü•â–ú–µ–¥–∞–ª–∏\n\n']
            for row in sorted_stat:
                result.append('`{:<14.14}  {:>4}/{}`\n'.format(strip_emoji(row['first_name']),
                                                               row['prizes'], row['bets_cnt']))
            race_user.put_msg(''.join(result))
        elif '–°—Ç–∞–≤–∫–∏' in text:
            stat = db_wrap.get_players_stat()
            race_user.put_msg('üöß–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µüöß')
        elif '–ù–∞–∑–∞–¥' in text:
            menu_0_1(race_user)


def menu_0(race_user):
    race_user.put_msg(race_user.status_msg, menu=0)


def menu_0_1(race_user):
    stat = db_wrap.get_main_stat()
    race_user.put_msg('üìä–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n'
                      '`–í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤ {:>8}`\n'
                      '`–í—Å–µ–≥–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö {:>7}`\n'
                      '`–í—Å–µ–≥–æ –∑–∞–±–µ–≥–æ–≤ {:>8}`\n'
                      '`–ü—Ä–∏–Ω—è—Ç–æ —Å—Ç–∞–≤–æ–∫ {:>7}`\n'
                      '`–°—É–º–º–∞ —Å—Ç–∞–≤–æ–∫ {:>9}üí∞`'.format(stat['users'], stat['animals'],
                                                      str_human_int(stat['races']),
                                                      str_human_int(stat['bets']),
                                                      str_human_int(stat['moneys'])), menu=1)


def menu_0_2(race_user):
    pass


def menu_0_1_4(race_user):
    pass
