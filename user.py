import db_wrap
import queue
import time


class User:

    def __init__(self, user_id):
        self._user_id = user_id
        self.track = None
        self.menu = 0
        self._last_msg_utc = 0

        self._money = db_wrap.get_money(self._user_id)
        self._bet = db_wrap.get_last_bet(self._user_id) or 10
        self._msg_queue = queue.Queue()

    @property
    def status_msg(self):
        return '`–ë–∞–ª–∞–Ω—Å: {:>12}üí∞`\n`–†–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏: {:>5}üí∞`\n\n' \
               '`–ú–∞–∫—Å. —Å—Ç–∞–≤–∫–∞: {:>6}üí∞`\n\n' \
               '[–ù–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –≥–æ–Ω–∫–æ–π](https://t.me/animal_races)'.format(self._money, self._bet, self.max_bet)

    def end_race(self, result):
        if self.track:
            self.track = None
            self._money = db_wrap.get_money(self._user_id)
            if result['place']:
                medal = {1: 'ü•á', 2: 'ü•à', 3: 'ü•â'}
                self.put_msg('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –∑–∞–Ω—è–ª–∞ {} –º–µ—Å—Ç–æ.\n–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {}üí∞'.format(
                    medal[result['place']], result['won']))
            else:
                self.put_msg('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞.\n–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ {}üí∞'.format(-result['won']))
                if self._money <= 100:
                    credit = 1000 - self._money
                    db_wrap.set_money(self._user_id, 1000)
                    self.put_msg('–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–µ–π—à–∏–º –æ–±—Ä–∞–∑–æ–º –í–∞–º —É–¥–∞–ª–æ—Å—å —Å–ø—É—Å—Ç–∏—Ç—å –ø–æ—á—Ç–∏ –≤—Å–µ –≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å–∫–∞—á–∫–∞—Ö.\n'
                                 '–ü—Ä–∏–Ω—è–≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ä–∞—Å–ø–æ—Ä—è–¥–∏—Ç–µ–ª—è, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã –Ω–µ —Å–º–æ–≥–ª–∏ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è, '
                                 '–∏ –ø—Ä–æ–≤–µ–¥—è —Å –Ω–∏–º –±—É—Ä–Ω—É—é –Ω–æ—á—å, –í—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç –Ω–µ–≥–æ {}üí∞\n'
                                 '(–°–ª–æ–∂–∏–ª–æ—Å—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ, —á—Ç–æ —Å –í–∞–º–∏ —ç—Ç–æ –Ω–µ –≤–ø–µ—Ä–≤–æ–π)'.format(credit))
                    self._money = db_wrap.get_money(self._user_id)
                if self._bet > self.max_bet:
                    self.set_bet(self.max_bet)

            self.put_msg(self.status_msg)

    @property
    def user_id(self):
        return self._user_id

    @property
    def money(self):
        return self._money

    @property
    def bet(self):
        if not self._bet:
            self._bet = db_wrap.get_last_bet(self._user_id) or 10
        return self._bet

    @property
    def max_bet(self):
        return max(int(self._money * 0.1), self._money - 1000)

    def set_bet(self, val):
        result_text = []

        if val > self.max_bet:
            self._bet = self.max_bet
            result_text.append('–£ –í–∞—Å –Ω–∞ —Å—á–µ—Ç—É {}üí∞\n'
                               '–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –º–∞–∫—Å–∏–º—É–º {}üí∞\n'.format(self._money, self.max_bet))
        elif val < 10:
            self._bet = 10
            result_text.append('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ 10üí∞\n')
        else:
            self._bet = val

        result_text.append('–†–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω {}üí∞'.format(self._bet))
        self.put_msg(''.join(result_text))

    def get_msg(self):
        now = time.clock()
        if not self._msg_queue.empty() and (now - self._last_msg_utc) >= 1:
            self._last_msg_utc = now
            next_msg = self._msg_queue.get()
            if next_msg[1] is not None:
                self.menu = next_msg[1]
            return next_msg[0]
        else:
            return None

    def put_msg(self, msg, menu=None):
        self._msg_queue.put((msg, menu))
