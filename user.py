import queue
import time
import logging

import db_wrap
from utils import strip_emoji

logger = logging.getLogger('AnimalRaces')


class User:
    msgs_queued = 0

    def __init__(self, user_id):
        self._user_id = user_id
        self.track = None
        self.menu = 0
        self._last_msg_utc = 0

        user_data = db_wrap.get_user_data(self._user_id)
        self.first_name = strip_emoji(user_data['first_name'])
        self._money = user_data['money']
        self._level = user_data['level']
        self._bet = db_wrap.get_last_bet(self._user_id) or 10
        self._msg_queue = queue.Queue()

    @property
    def status_msg(self):
        return ' *{}*\n' \
               'Ô∏è–£—Ä–æ–≤–µ–Ω—å {}‚öúÔ∏èÔ∏è\n\n' \
               '`–ë–∞–ª–∞–Ω—Å {:>15}üí∞`\n' \
               '`–†–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏ {:>8}üí∞`\n\n' \
               '`–ú–∞–∫—Å. —Å—Ç–∞–≤–∫–∞  {:>8}üí∞`\n' \
               '`–ù–∞—á–∞–ª—å–Ω—ã–π –∫—Ä–µ–¥–∏—Ç {:>5}üí∞`\n' \
               '`–°–ª–µ–¥. —É—Ä–æ–≤–µ–Ω—å {:>8}üí∞`\n\n' \
               '[–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–±–µ–≥–∏](https://t.me/animal_races)'.format(self.first_name, self._level,
                                                                      self._money, self._bet,
                                                                      self.max_bet, self.low_limit, self.max_limit)

    def end_race(self, result):
        if self.track:
            self.track = None
            self._money = db_wrap.get_money(self._user_id)
            if result['place']:
                medal = {1: 'ü•á', 2: 'ü•à', 3: 'ü•â'}
                self.put_msg('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –∑–∞–Ω—è–ª–∞ {} –º–µ—Å—Ç–æ.\n–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {}üí∞'.format(
                    medal[result['place']], result['won']))
                self._check_money()
            else:
                self.put_msg('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –ø—Ä–æ–∏–≥—Ä–∞–ª–∞.\n–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ {}üí∞'.format(-result['won']))
                self._check_money()
            self.put_msg(self.status_msg)

    def _check_money(self):
        if self._money >= self.max_limit:
            self._level_up()
        elif self._money <= self.low_limit / 10:
            self._give_credit()
        if self._bet > self.max_bet:
            self.set_bet(self.max_bet)

    def set_money(self, money):
        self._money = money
        self._check_money()

    @property
    def user_id(self):
        return self._user_id

    @property
    def money(self):
        return self._money

    @property
    def bet(self):
        if not self._bet:
            self._bet = db_wrap.get_last_bet(self._user_id) or 10
        return self._bet

    @property
    def max_bet(self):
        return max(int(self._money * 0.1), self._money - self.low_limit)

    @property
    def low_limit(self):
        return 1000 * (self._level * self._level + self._level) // 2

    @property
    def max_limit(self):
        return self.low_limit * 20

    def _give_credit(self):
        logger.debug('–í—ã–¥–∞—á–∞ –∫—Ä–µ–¥–∏—Ç–∞: %s', self.first_name)
        credit = self.low_limit - self._money
        if db_wrap.set_money(self._user_id, self.low_limit):
            self._money = self.low_limit
            self.put_msg('–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–µ–π—à–∏–º –æ–±—Ä–∞–∑–æ–º –í–∞–º —É–¥–∞–ª–æ—Å—å —Å–ø—É—Å—Ç–∏—Ç—å –ø–æ—á—Ç–∏ –≤—Å–µ –≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å–∫–∞—á–∫–∞—Ö.\n'
                         '–ü—Ä–∏–Ω—è–≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ä–∞—Å–ø–æ—Ä—è–¥–∏—Ç–µ–ª—è, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã –Ω–µ —Å–º–æ–≥–ª–∏ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è, '
                         '–∏ –ø—Ä–æ–≤–µ–¥—è —Å –Ω–∏–º –±—É—Ä–Ω—É—é –Ω–æ—á—å, –í—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç –Ω–µ–≥–æ {}üí∞\n'
                         '(–°–ª–æ–∂–∏–ª–æ—Å—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ, —á—Ç–æ —Å –í–∞–º–∏ —ç—Ç–æ –Ω–µ –≤–ø–µ—Ä–≤–æ–π)'.format(credit))
        else:
            logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –∫—Ä–µ–¥–∏—Ç–∞: %s', self.first_name)

    def _level_up(self):
        logger.debug('–ü–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è: %s', self.first_name)
        credit = self.low_limit + (self._level+1) * 1000
        if db_wrap.set_level_money(self._user_id, self._level+1, credit):
            self._level += 1
            self._money = self.low_limit
            self.put_msg('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º. –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ {} —É—Ä–æ–≤–Ω—è.\n'
                         '–í–∞—à –Ω–∞—á–∞–ª—å–Ω—ã–π –∫—Ä–µ–¥–∏—Ç –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–∞ —Å—á–µ—Ç–µ –≤–æ–∑—Ä–æ—Å–ª–∏, '
                         '–Ω–æ –í–∞–º –∑–∞ —ç—Ç–æ –ø—Ä–∏—à–ª–æ—Å—å —Ä–∞—Å–ø–ª–∞—Ç–∏—Ç—å—Å—è –ø–æ—á—Ç–∏ –≤—Å–µ–π –∏–º–µ—é—â–µ–π—Å—è —É –í–∞—Å '
                         '–Ω–∞–ª–∏—á–Ω–æ—Å—Ç—å—é.\n'.format(self._level))
        else:
            logger.error('–û—à–∏–±–∫–∞ –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –∏–≥—Ä–æ–∫–∞: %s', self.first_name)

    def set_bet(self, val):
        result_text = []

        if val > self.max_bet:
            self._bet = self.max_bet
            result_text.append('–£ –í–∞—Å –Ω–∞ —Å—á–µ—Ç—É {}üí∞\n'
                               '–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –º–∞–∫—Å–∏–º—É–º {}üí∞\n'.format(self._money, self.max_bet))
        elif val < 10:
            self._bet = 10
            result_text.append('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ 10üí∞\n')
        else:
            self._bet = val

        result_text.append('–†–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω {}üí∞'.format(self._bet))
        self.put_msg(''.join(result_text))

    def get_msg(self):
        if self._msg_queue.empty():
            return None

        now = time.perf_counter()
        if (now - self._last_msg_utc) < 0.7:
            return None

        self._last_msg_utc = now
        next_msg = self._msg_queue.get()
        User.msgs_queued -= 1
        if next_msg[1] is not None:
            self.menu = next_msg[1]
        return next_msg[0]

    def put_msg(self, msg, menu=None):
        self._msg_queue.put((msg, menu))
        User.msgs_queued += 1
